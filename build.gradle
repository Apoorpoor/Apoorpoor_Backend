plugins {
    id 'org.springframework.boot' version '3.0.7'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
    id 'jacoco'
}

group = 'login'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.auth0:java-jwt:4.2.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    compileOnly "org.springframework.boot:spring-boot-starter-amqp"
    compileOnly "org.springframework.boot:spring-boot-starter-reactor-netty"

    //S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.0.1.RELEASE'
    //Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // implementation 'com.auth0:java-jwt:4.2.1'

    //jwt토큰
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0"


    //fcm
    //implementation 'com.google.firebase:firebase-admin:6.8.1'
    implementation 'com.google.firebase:firebase-admin:9.1.1'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'


    //jasypt
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'
}

//tasks.named('test') {
//    useJUnitPlatform()
//}

jar {
    enabled = false
}

// ===  QueryDsl 빌드 옵션 (선택) ===
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}
